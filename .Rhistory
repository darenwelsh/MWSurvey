source('~/r/MWSurvey.R')
source('~/r/MWSurvey.R')
source('~/r/MWSurvey.R')
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile="./data/IdahoHousing.csv", method="CURL")
download.file(fileURL, destfile="./data/IdahoHousing.csv", method="curl")
getwd()
setwd("~/r/Coursera/GettingCleaningData")
if(!file.exists("./data")){
dir.create("data")
getwd()
getwd()
if(!file.exists("data")){
dir.create("data")
}
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL, destfile="./data/IdahoHousing.csv", method="curl")
getwd()
setwd("/Data")
setwd("/Users/lwelsh/r/Coursera/GettingCleaningData/Data")
getwd()
ls()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
getwd()
setwd("/Users/lwelsh/r/Coursera/GettingCleaningData")
getwd()
expensiveproperties()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
expensiveproperties()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
expensiveproperties()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
expensiveproperties()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
expensiveproperties()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
expensiveproperties()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
expensiveproperties()
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", destfile="./data/NGAP.xlsx", method="curl")
library(xlsx)
install.packages("xlsx")
library(xlsx)
dat <- read.xlsx("./data/NGAP.xlsx",colIndex=7:15,rowIndex=18:23)
dat <- read.xlsx("./data/NGAP.xlsx",colIndex=7:15,rowIndex=18:23,sheetIndex=1)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
library(XML)
install.packages("XML")
library(XML)
doc <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
doc <- xmlTreeParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
str(doc)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
rootNode[[1]]
zips <- xpathSApply(rootNode,"//zipcode",xmlValue)
names(rootNode)
length(rootNode$row)
length(rootNode)
str(rootNode)
zips <- xpathSApply(rootNode,"//zipcode",xmlValue)
zips <- xpathApply(rootNode,"//zipcode",xmlValue)
doc <- xmlTreeParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",useInternal=TRUE)
rootNode <- xmlRoot(doc)
rootNode
zips <- xpathSApply(rootNode,"//zipcode",xmlValue)
length(zips$21231)
class(zips)
length(zips$"21231")
table(zips)
getwd()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
library(data.table)
install.packages("data.table")
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
str(DT)
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
?system.time
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
avgcalcspeed()
avgcalcspeed()
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
?replicate
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
?replicate
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
?sum
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
?sum
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
avgcalcspeed()
source('~/r/Coursera/GettingCleaningData/Quiz1.R')
install.packages("RMySQL")
install.packages("httr")
?oauth_app
library(httr)
?oauth_app
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
?sig
?sign_oauth1.0
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
library(httr)
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
install.packages("httpuv")
library(httpuv)
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
getRepoInitDate()
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
library(jsonlite)
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
getRepoInitDate()
?unique
getwd()
contacthtml <- readLines(url("http://biostat.jhsph.edu/~jleek/contact.html "))
nchar(contacthtml[10])
nchar(contacthtml[20])
nchar(contacthtml[30])
nchar(contacthtml[100])
fordata <- readLines(url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "))
fordata <- readLines(url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "))
head(fordata)
names(fordata)
str(fordata)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", destfile="./data/fonts.for", method="curl")
?read.fdf
library(utils)
fontdf <- read.fwf("./data/fonts.for",c(15,4,4,5,4,4,5,4,4,5,4,4),skip=4)
head(fontdf)
sum(fontdf[,5])
source('~/r/Coursera/GettingCleaningData/Quiz2.R')
source('~/r/MWSurvey.R')
setwd(~/r)
setwd("~/r")
MWplotall()
source('~/r/MWSurvey.R')
source('~/r/MWSurvey.R')
MWplotall()
source('~/r/MWSurvey.R')
source('~/r/MWSurvey.R')
source('~/r/MWSurvey.R')
source('~/r/MWSurvey.R')
MWplotallconstrained()
source('~/r/MWSurvey.R')
MWplotallconstrained()
df <- read.csv("MWSurvey.csv", colClasses = "factor", na.strings=c(""," ","NA"))
control_df <- split_df[[controlcol]]
control_df <- split_df[[2]]
head(control_df)
class(control_df)
names(df)
nrow(df)
split_df <- split(df, df[2])
nrow(split_df)
class(split_df)
names(split_df)
nrow(split_df[1])
nrow(split_df$`100-500 people`)
nrow(split_df[[1]])
source('~/r/MWSurvey.R')
MWplotallconstrained()
source('~/r/MWSurvey.R')
source('~/r/MWSurvey.R')
MWplotallconstrained()
source('~/r/MWSurvey.R')
MWplotallconstrained()
source('~/r/MWSurvey.R')
MWplotallconstrained()
source('~/r/MWSurvey.R')
MWplotallconstrained()
source('~/r/MWSurvey.R')
MWplotallconstrained()
MWplotallconstrained(2)
MWplotallconstrained("orgsize")
class(split_df[1])
summary(split_df)
summary(split_df[1])
summary(df)
length(split_df[1])
summary(split_df)
length(split_df[[1])
length(split_df[[1]])
length(split_df[[2]])
head(split_df[[1]])
head(split_df[[2]])
MWplotallconstrained("orgsize")
getwd()
setwd("~/r/MWSurvey")
getwd()
MWplotallconstrained("orgsize")
MWplotallconstrained("orgsize")
MWplotallconstrained("orgsize")
df <- read.csv("MWSurvey.csv", colClasses = "factor", na.strings=c(""," ","NA"))
head(df)
names(df)
str(df)
split_df <- split(df, df[2])
names(split_df)
summary(split_df)
split_df <- split(df, df[2]=='100-500 people')
summary(split_df)
head(split_df,1)
head(split_df)[1,]
?head
head(split_df, n=1
)
head(split_df, n=1L)
?split
head(df,n=2)
split_df <- split(df, df[[2]])
split_df[1,]
summary(split_df)
summary(split_df[[1]])
MWplotallconstrained("orgsize")
?read.csv
names(df)
colnames <- c("timestamp"
,"orgsize"
,"years"
,"numsites"
,"privacy"
,"users"
,"version"
,"updates"
,"extensions"
,"purpose"
,"coreimprovements"
,"communityimprovements"
,"contributions"
,"barriers")
df <- read.csv("MWSurvey.csv", colClasses = "factor", na.strings=c(""," ","NA"))
names(df)
df <- read.csv("MWSurvey.csv", colClasses = "factor", na.strings=c(""," ","NA"), col.names = colnames)
names(df)
split_df <- split(df, df[[2]])
names(split_df)
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize",2)
MWplotallconstrained("orgsize",3)
MWplotallconstrained("orgsize",4)
source('~/r/MWSurvey/MWSurvey.R')
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
source('~/r/MWSurvey/MWSurvey.R')
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize", 2)
levels(split_df[[2]])
levels(split_df)
names(split_df)
MWplotallconstrained("orgsize", 4)
MWplotallconstrained("orgsize", 6)
?switch
source('~/r/MWSurvey/MWSurvey.R')
source('~/r/MWSurvey/MWSurvey.R')
source('~/r/MWSurvey/MWSurvey.R')
source('~/r/MWSurvey/MWSurvey.R')
source('~/r/MWSurvey/MWSurvey.R')
source('~/r/MWSurvey/MWSurvey.R')
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
tvaluename <- c("One", "Two", "Three")
sapply(tvaluename, print(tvaluename))
sapply(tvaluename, function(){print(tvaluename)})
sapply(tvaluename, function(x){print(x)})
count(tvaluename)
length(tvaluename)
sapply(tvaluename, function(x) print(x))
sapply(tvaluename, function(x) x)
sapply(tvaluename, function(x) print("hi"))
apply(tvaluename, function(x) print("hi"))
lapply(tvaluename, function(x) print("hi"))
lapply(tvaluename, print("hi"))
lapply(tvaluename, function(x) x[x]
)
lapply(tvaluename, function(x) x[1])
lapply(tvaluename, function(x) x[2])
lapply(tvaluename, function(x) x[,1])
lapply(tvaluename, function(x) x[1,])
lapply(tvaluename, function(x) x[1])
sapply(tvaluename, function(x) x[1])
sapply(tvaluename, function(x) x)
MWplotallconstrained("orgsize")
?get
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
tvaluename
for(i in sequence(tvaluename)){print(i)}
for(i in seq_along(tvaluename)){print(i)}
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
for(i in seq_along(tvaluename)){print(tvaluename[i])}
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
MWplotallconstrained("privacy")
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
MWplotallconstrained("orgsize")
source('~/r/MWSurvey/MWSurvey.R')
names(df)
MWplotallconstrained("years")
MWplotallconstrained("numsites")
MWplotallconstrained("privacy")
MWplotallconstrained("users")
MWplotallconstrained("updates")
split_df <- split(df, df$version)
levels(split_df)
summary(split_df)
class(df)
summary(df)
nrow(df)
ncol(df)
